server.port: 8080




#---------------------   数据库ip地址　----------------------------------
ms.config.system-param.db-ip-param=111.230.198.11
#redis数据库配置
ms.config.system-param.redisdb-ip-param=192.168.0.138

#----------------------   数据源配置 mysql  ------------------------------- start
#####  第一数据源 （默认数据源） ########
spring.datasource.primary.url=jdbc:mysql://${ms.config.system-param.db-ip-param}:3306/ms-db-primary
spring.datasource.primary.username=root
spring.datasource.primary.password=1qaz@WSX
spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver
# 第二数据源
spring.datasource.secondary.url=jdbc:mysql://${ms.config.system-param.db-ip-param}:3306/ms-db-secondary
spring.datasource.secondary.username=root
spring.datasource.secondary.password=1qaz@WSX
spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver
#validate               加载hibernate时，验证创建数据库表结构
#create                  每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。
#create-drop        加载hibernate时创建，退出是删除表结构
#update                 加载hibernate自动更新数据库结构
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jackson.serialization.indent-output=true
#create-drop 
spring.jpa.hibernate.ddl-auto=update
hibernate.id.new_generator_mappings=true
#------------------------   数据源配置 mysql   -------------------------------  end
#-----------------------  前端框架 采用 freemarker  配置-------------------------  start
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.request-context-attribute=request
spring.freemarker.suffix=.html
#-----------------------    前端框架 采用 freemarker  配置------------------------  end

#----------------------   redis 配置 -------------------------------------start
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=${ms.config.system-param.redisdb-ip-param}
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0
#-------------------------------   redis 配置 -------------------------end

#---------------------    spring-aop 配置 ----------------------------start

spring.aop.proxy-target-class=true

#-------------------------- 线程池 参数配置          --------------------------start
com.whp.config.properties.threadPoolConfig.corePoolSize=
com.whp.config.properties.threadPoolConfig.corePoolSize=30
# 最大线程池大小
com.whp.config.properties.threadPoolConfig.maxPoolSize=150
# 线程持续存活时间(秒)
com.whp.config.properties.threadPoolConfig.keepAliveSeconds=10
# 队列容量
com.whp.config.properties.threadPoolConfig.queueCapacity=100

