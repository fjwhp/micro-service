package ${package.Entity};

#foreach($pkg in ${table.importPackages})
#if($pkg!="com.baomidou.mybatisplus.annotations.TableId" && $pkg!="com.baomidou.mybatisplus.annotations.TableField")
import ${pkg};
#end
#end
#set($longPropCount=0)
#foreach($field in ${table.fields})
#if(${field.propertyType.equals("Long")})
#set($longPropCount=$longPropCount + 1)
#end
#end
#if($longPropCount != 0)
import javax.persistence.*;
#end

/**
 * 
 * @描述：${table.comment}(实体类).
 * 
 * @作者：${author}
 * 
 * @时间: ${date}
 */
#if(${table.convert})

#end

@Entity
@Table(name="${table.name}")
@NamedQuery(name="${entity}.findAll", query="SELECT t FROM ${entity} t")
public class ${entity} implements Serializable {

private static final long serialVersionUID = 1L;

#foreach($field in ${table.fields})
#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
#end
	@Column(name="${field.name}")
#if(${field.keyFlag})
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
#if(${field.keyIdentityFlag})
	
#elseif(${field.convert})
    
#end
#elseif(${field.convert})
#end
#if(${field.propertyType.equals("Long")})
#end
	private ${field.propertyType} ${field.propertyName};
#end

#foreach($field in ${table.fields})
#if(${field.propertyType.equals("Boolean")})
#set($getprefix="is")
#else
#set($getprefix="get")
#end

	public ${field.propertyType} ${getprefix}${field.capitalName}() {
		return ${field.propertyName};
	}

#if(${entityBuilderModel})
	public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#else
	public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#end
		this.${field.propertyName} = ${field.propertyName};
#if(${entityBuilderModel})
		return this;
#end
	}
#end

#if(${entityColumnConstant})
#foreach($field in ${table.fields})
	public static final String ${field.name.toUpperCase()} = "${field.name}";

#end
#end
#if(${activeRecord})
	@Override
	protected Serializable pkVal() {
#if(${keyPropertyName})
		return this.${keyPropertyName};
#else
		return this.id;
#end
	}

#end
}
